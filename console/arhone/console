#!/usr/bin/env php
<?php
include __DIR__ . '/../../include/arhone/autoload.php';

set_time_limit(0);

if (!empty($argv)) {

    array_shift($argv);
    $argv = array_flip($argv);

    if (isset($argv['--develop']) || isset($argv['-d'])) {

        $_SERVER['DEVELOP'] = true; // Режим разрабочика
        unset($argv['--develop']);
        unset($argv['-d']);

    }

    if (isset($argv['--test']) || isset($argv['-t'])) {

        $_SERVER['TEST'] = true; // Режим тестирования
        unset($argv['--test']);
        unset($argv['-t']);

    }

    if (isset($argv['-td']) || isset($argv['-dt'])) {

        $_SERVER['DEVELOP'] = true; // Режим разрабочика
        $_SERVER['TEST'] = true; // Режим тестирования
        unset($argv['-td']);
        unset($argv['-dt']);

    }

    $Builder = new arhone\builder\Builder();
    $Builder->instruction(include __DIR__ . '/../../config/arhone/builder.php');
    try {

        // Регистрация триггеров
        $Trigger = $Builder->make('Trigger');
        foreach (include __DIR__ . '/../../config/arhone/trigger.php' as $action => $item) {

            foreach ($item as $instruction) {

                if (isset($instruction['class']) && isset($instruction['method'])) {

                    $Trigger->add($action, function ($match, $data) use ($instruction, $Builder) {

                        $Class = $Builder->make($instruction['class']);

                        $match[0] = $data;
                        return $Class->{$instruction['method']}(...array_intersect_key($match, array_flip($instruction['argument'] ?? array_keys($match))));

                    }, [
                        'name'     => $instruction['name'] ?? null,
                        'position' => $instruction['position'] ?? null,
                        'break'    => $instruction['break'] ?? null,
                        'status'   => $instruction['status'] ?? true
                    ]);

                }

            }

        }

        // Создание символических ссылок
        foreach (include __DIR__ . '/../../config/arhone/symlink.php' as $target => $link) {

            if (file_exists($target) && !file_exists($link)) {
                symlink ($target , $link);
            }

        }

        echo $Trigger->run('console:' . implode(' ', array_flip($argv)));

    } catch (Exception $Exception) {

        echo $Exception->getMessage() ,
        PHP_EOL , $Exception->getTraceAsString() ,
        PHP_EOL;

    }


}
