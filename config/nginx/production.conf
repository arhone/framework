server {

    listen 80;
    server_name project;

    # Кодировка по-умолчанию
    charset utf-8;

    # Логи
    log_not_found on;
    access_log /srv/project/current/log/nginx/access.log;
    error_log /srv/project/current/log/nginx/error.log;

    # Заголовки
    more_set_headers 'Host: project';
    more_set_headers 'Server: Arhone';

    # Редирект на https
    location / {
        return 301 https://$server_name$request_uri;
    }

    # Letsencrypt
    location ^~ /.well-known/acme-challenge/ {
    	default_type "text/plain";
    	root /srv/letsencrypt;
    }

}

server {

    # Возможность вставлять динамические блоки
    ssi on;

    # Показывать версию nginx
    server_tokens off;

    listen 443 ssl;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/project/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/project/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/project/fullchain.pem;

    server_name project;

    root /srv/project/current/web;
    index production.php;

    # Кодировка по-умолчанию
    charset utf-8;

    # Основной лог лучше отключить для экономии дисковых операций
    access_log off;
    # Лог ошибок лучше перевести в режим логирования только критических ситуаций
    error_log /var/log/nginx/error.log crit;
    # Разрешает или запрещает записывать в error_log ошибки о том, что файл не найден
    log_not_found off;

    # В этом случае сервер не будет принимать запросы размером более 1Мб
    client_max_body_size  1m;
    # Будет ждать 10 секунд тело запроса от клиента, после чего сбросит соединение
    client_body_timeout 10;
    # Если клиент перестал читать / отвечать, Nginx будет сбрасывать соединение с ним
    reset_timedout_connection on;

    # Если клиент прекратит чтение ответа, Nginx подождет 2 секунды и сбросит соединение
    send_timeout 2;
    # Метод отправки данных sendfile более эффективен, чем стандартный метод read+write
    sendfile on;

    # Будет отправлять заголовки и начало файла в одном пакете
    tcp_nodelay on;
    tcp_nopush on;

    # Будет ждать 30 секунд перед закрытием keepalive соединения
    keepalive_timeout  30;
    # Максимальное количество keepalive запросов от одного клиента
    keepalive_requests 50;

    # Будет сжимать все файлы с перечисленными типами
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    # Заголовки
    more_set_headers 'Host: project';
    more_set_headers 'Server: Arhone';

    # Статические файлы
    location ~* ^.+\.(jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar|swf|otf|ttf|woff|ico)$ {
        expires max;
        access_log off;
        add_header Access-Control-Allow-Origin *;
        add_header Cache-Control public;
    }

    # Шаблоны ошибок 40x
    #error_page 403 404 /40x.html;
    #location = /40x.html {
    #    root /srv/project/web/template/error;
    #}

    # Шаблоны ошибок 50x
    #error_page 500 502 503 504 /50x.html;
    #location = /50x.html {
    #    root /srv/project/web/template/error;
    #}

    location / {
		try_files $uri $uri/ /production.php?$query_string;
	}

    # Подключение php-fpm
    location ~ \.php$ {
        try_files $uri $uri/ =404;

        fastcgi_pass php-fpm;
        fastcgi_index production.php;

        include fastcgi_params;
        fastcgi_param DOCUMENT_ROOT   /srv/project/current/web;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
        fastcgi_param QUERY_STRING    $query_string;
        fastcgi_param REQUEST_METHOD  $request_method;
        fastcgi_param CONTENT_TYPE    $content_type;
        fastcgi_param CONTENT_LENGTH  $content_length;
        fastcgi_intercept_errors      on;
        fastcgi_ignore_client_abort   off;
        fastcgi_connect_timeout       60;
        fastcgi_send_timeout          180;
        fastcgi_read_timeout          180;
        fastcgi_buffer_size           128k;
        fastcgi_buffers               4 256k;
        fastcgi_busy_buffers_size     256k;
        fastcgi_temp_file_write_size  256k;
        internal;
    }

    # Запрет файлов
    location ~* ^.+\.(php|htaccess|htpassword)$ {
        return 403;
    }

    # lua
    location /lua {
        content_by_lua_file /srv/project/current/config/lua/front.lua;
    }

}